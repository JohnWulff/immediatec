# @(#)$Id: Makefile.in 1.84 $

#######################################################################
#
#	Copyright (C) 1985-2021  John E. Wulff
#
#   You may distribute under the terms of either the GNU General Public
#   License or the Artistic License, as specified in the README file.
#
#   For more information about this program, or for information on how
#   to contact the author, see the README file
#
#	Makefile for immediate C compilers and runtime library
#	J.E. Wulff	14-Mar-87
#
#	use GNU make	28-Jul-96
#	use GNU autoconf and configure	6.Mar.2001
#	use GNU make pattern rules instead of suffix rules 3.Jan.2005
#
#	to make immcc, make with OPT=''
#	to make libict.a, remove all objects and make with OPT='-DLOAD -DTCP'
#	to make libict.so, remove all objects and make with OPT='-fPIC -DLOAD -DTCP'
#	to make icr, remove all objects and make with OPT='-DRUN -DYYDEBUG'
#	to make ict, remove all objects and make with OPT='-DTCP'
#	to make const, remove all objects and make with OPT='-DTESTCONS'
#	to make lmain, remove all objects and make with OPT='-DLMAIN -DYYDEBUG'
#	to make iCpiFace, remove all objects and make with OPT='-DRASPBERRYPI -DTCP -DYYDEBUG'
#	to make iCpiPWM, remove all objects and make with OPT='-DRASPBERRYPI -DPWM -DTCP -DYYDEBUG'
#
#	  makeAll       # makes 'immcc' 'libict.a' and 'libict.so' without YYDEBUG support
#	  makeAll -rtm; # makes the auxiliary compilers with YYDEBUG support
#	  makeAll -P;   # make iCpiFace real I/O program with YYDEBUG support
#	  makeAll -V;   # make iCpiPWM real serVo and PWM I/O program with YYDEBUG support
#
#	Do not rm comp.tab.c, gram.tab.c and lex.yy.c with make clean in case the target
#	system has no bison or yacc and no flex or lex (some Knoppix distributions)
#	Define YYERROR_VERBOSE for bison generated files comp.tab.c and gram.tab.c
#	26.Mar.2008
#
#######################################################################

#### Start of system configuration section. ####

srcdir = @srcdir@
VPATH = @srcdir@

CC = @CC@
ifeq ($(CC),gcc)
O0 = -O0
else
O0 =
endif

GO = @GO@
LEX = @LEX@
LEXLIB = @LEXLIB@
YACC = @YACC@
ifeq ($(YACC),yacc)
Y = -DYACC
else
Y =
endif
INSTALL = @INSTALL@
INSTALL_PROGRAM = @INSTALL_PROGRAM@ -p
INSTALL_DATA = @INSTALL_DATA@ -p

CFLAGS = @CFLAGS@
CFLAGS_COMPILE_ONLY = -c $(OPT) $(Y) -DCC=$(CC)
LDFLAGS = @LDFLAGS@
YFLAGS = -d -v
O=o

ifeq ($(findstring EFENCE,$(OPT)),EFENCE)
EL = -lefence
else
EL =
endif

LIBS = @LIBS@

prefix = @prefix@
exec_prefix = @exec_prefix@

# Where the installed binary goes.
bindir = @bindir@
binprefix =

# Where the installed libraries go.
libdir = @libdir@
libdir64 = @libdir@64
libprefix =

# Where the installed includes go.
includedir = @includedir@
includeprefix =

mandir = @mandir@
manext = 1
manprefix =

REV  = $(shell perl -e 'while (<>) { if ( m/\$$(Revision: icc_|Id: icc.v(,v)? )(\d+)\.(\d+)\b/ ) { print "$$3.$$4"; last; } }' $(srcdir)/icc.v)
PADD = perl -e 'while (<>) { if ( $$_ !~ m/^\$$Id/ ) { print; } }'
TKGE803 = $(shell perl -e 'use Tk; if ($$Tk::VERSION >= 803) { print "true"; }')

#### End of system configuration section. ####

SHELL = /bin/sh

# This rule allows us to supply the necessary -D options
# in addition to whatever the user asks for.
%.$(O):	$(srcdir)/%.c
	$(CC) -I. $(CFLAGS_COMPILE_ONLY) $(CPPFLAGS) $(CFLAGS) $<

#######################################################################

CSRC =	$(srcdir)/comp.y $(srcdir)/genr.c $(srcdir)/init.c $(srcdir)/symb.c $(srcdir)/outp.c $(srcdir)/gram.y $(srcdir)/lexc.l $(srcdir)/cons.y
COBJ =	comp.$(O) genr.$(O) init.$(O) symb.$(O) outp.$(O) gram.$(O) lexc.$(O) cons.$(O)
LSRC =	$(srcdir)/link.c $(srcdir)/rsff.c $(srcdir)/scan.c
LOBJ =	link.$(O) rsff.$(O) scan.$(O)
ifeq ($(findstring RASPBERRYPI,$(OPT)),RASPBERRYPI)
PSRC =	$(srcdir)/rpi_rev.c $(srcdir)/rpi_gpio.c $(srcdir)/mcp23s17.c $(srcdir)/pifacecad.c
POBJ =	rpi_rev.$(O) rpi_gpio.$(O) mcp23s17.$(O) pifacecad.$(O)
else
PSRC =
POBJ =
endif
compPREFIX = -piC
consPREFIX = -pcn
gramPREFIX =

#### Standalone versions ##############################################
#### make icr and lmain with YYDEBUG, since they need it for normal operation

im_lib:
	@$(srcdir)/makeAll -o$(O)

quiet:
	@$(srcdir)/makeAll -q -o$(O)

immcc:	$(srcdir)/Makefile icc.$(O) misc.$(O) scid.$(O) $(COBJ) pplstfix
	$(CC) $(LDFLAGS) -o immcc icc.$(O) misc.$(O) scid.$(O) $(COBJ) $(EL)

icr:	$(srcdir)/Makefile icc.$(O) misc.$(O) scid.$(O) icr.$(O) cexe.$(O) $(COBJ) $(LOBJ) icbegin.a pplstfix
	$(CC) $(LDFLAGS) -o icr icc.$(O) misc.$(O) scid.$(O) icr.$(O) cexe.$(O) $(COBJ) $(LOBJ) icbegin.a $(EL)

ict:	$(srcdir)/Makefile icc.$(O) misc.$(O) scid.$(O) ict.$(O) cexe.$(O) tcpc.$(O) $(COBJ) $(LOBJ) icbegin.a pplstfix
	$(CC) $(LDFLAGS) -o ict icc.$(O) misc.$(O) scid.$(O) ict.$(O) cexe.$(O) tcpc.$(O) $(COBJ) $(LOBJ) icbegin.a $(EL)

goserver:	$(srcdir)/Makefile $(srcdir)/../pkg/*/tcpcomm.a $(srcdir)/goserver.go
    ifneq ($(GO),)
	$(GO) build $(srcdir)/goserver.go
    endif

../pkg/*/tcpcomm.a:	$(srcdir)/Makefile $(srcdir)/tcpcomm/tcpcomm.go
    ifneq ($(GO),)
	$(GO) install $(srcdir)/tcpcomm
    endif

immag:	$(srcdir)/Makefile $(srcdir)/immag.go
    ifneq ($(GO),)
	$(GO) build $(srcdir)/immag.go
    endif

#### Aux library for icr and ict ######################################

icbegin.a:	$(srcdir)/Makefile icbegin.$(O) p_channel.$(O) icend.$(O)
	ar -rvs icbegin.a icbegin.$(O) p_channel.$(O) icend.$(O)

#### Static run-time library (for debugging) ##########################

libict.a:	$(srcdir)/Makefile load.$(O) misc.$(O) scid.$(O) ict.$(O) icbegin.$(O) p_channel.$(O) icend.$(O) tcpc.$(O) $(LOBJ) $(POBJ)
	ar -rvs libict.a load.$(O) misc.$(O) scid.$(O) ict.$(O) icbegin.$(O) p_channel.$(O) icend.$(O) tcpc.$(O) $(LOBJ) $(POBJ)

#### Shared run-time library ##########################################

libict.so:	$(srcdir)/Makefile load.$(O) misc.$(O) scid.$(O) ict.$(O) icbegin.$(O) p_channel.$(O) icend.$(O) tcpc.$(O) $(LOBJ) $(POBJ)
	$(CC) -shared -Wl,-soname,libict.so.1 -o libict.so load.$(O) misc.$(O) scid.$(O) ict.$(O) icbegin.$(O) p_channel.$(O) icend.$(O) tcpc.$(O) $(LOBJ) $(POBJ)

#### Const expression parser test #####################################

const:	$(srcdir)/Makefile const.$(O) cons.$(O)
	$(CC) $(LDFLAGS) -o const const.$(O) cons.$(O) $(EL)

#### C compiler parser test ###########################################

lmain:	$(srcdir)/Makefile lmain.$(O) misc.$(O) gram.$(O) lexc.$(O) symb.$(O)
	$(CC) $(LDFLAGS) -o lmain lmain.$(O) misc.$(O) gram.$(O) lexc.$(O) symb.$(O) $(EL)

ifeq ($(findstring RASPBERRYPI,$(OPT)),RASPBERRYPI)
#### Raspberry Pi apps ################################################

#### iCpiFace real I/O for Raspberry Pi ###############################

iCpiFace:	$(srcdir)/Makefile iCpiFace.$(O) misc.$(O) icend.$(O) tcpc.$(O) $(POBJ)
	$(CC) $(LDFLAGS) -o iCpiFace iCpiFace.$(O) misc.$(O) icend.$(O) tcpc.$(O) $(POBJ) $(EL)

#### iCgpioPUD adjust pull-up/down for GPIO's on Raspberry Pi #########
####  install with set user ID ########################################

iCgpioPUD:	$(srcdir)/Makefile iCgpioPUD.$(O) bcm2835.$(O)
	$(CC) $(LDFLAGS) -o iCgpioPUD iCgpioPUD.$(O) bcm2835.$(O) -lrt $(EL)

#### iCpiPWM real serVo and PWM I/O for Raspberry Pi ##################
####  install with set user ID ########################################

${libdir}/${libprefix}libpigpio.a:	$(srcdir)/../lib/libpigpio.a
	@${INSTALL_DATA} $(srcdir)/../lib/libpigpio.a      ${libdir}/${libprefix}libpigpio.a

iCpiPWM:	$(srcdir)/Makefile iCpiPWM.$(O) misc.$(O) icend.$(O) tcpc.$(O) rpi_rev.$(O) ${libdir}/${libprefix}libpigpio.a
	$(CC) $(LDFLAGS) -o iCpiPWM iCpiPWM.$(O) misc.$(O) icend.$(O) tcpc.$(O) rpi_rev.$(O) -lpigpio -lpthread -lrt $(EL)

endif
#### Compile objects ##################################################

pplstfix:
	@$(SHELL) -ec 'if [ ! -x pplstfix -a ! -L pplstfix -a -x $(srcdir)/pplstfix ]; then rm -f pplstfix; echo "ln -s $(srcdir)/pplstfix ."; ln -s $(srcdir)/pplstfix .; fi'

$(srcdir)/lex.yy.c:	$(srcdir)/lexc.l
    ifneq ($(LEX),)
	$(SHELL) -ec 'if ! $(LEX) $<; then echo "$(LEX) error return"; fi'
    else
	@echo "System has no flex or lex - install one of them"
    endif

$(srcdir)/%.tab.c:	$(srcdir)/%.y
    ifneq ($(YACC),)
	$(SHELL) -ec 'if [ -f $(*).tab.h ]; then mv -f $(*).tab.h yy.tab.ht; fi'
	$(SHELL) -ec 'if grep -q %if $<; then mv $< $(<).sav; ./immac -Y $(OPT) -o $< $(<).sav; fi'
	$(SHELL) -ec 'if ! $(YACC) $(YFLAGS) $($(*)PREFIX) $<; then echo "$(YACC) error return"; fi'
	$(SHELL) -ec 'if [ -f $(<).sav ]; then mv -f $(<).sav $<; fi'
	$(SHELL) -ec 'if cmp -s $(*).tab.h yy.tab.ht; then mv yy.tab.ht $(*).tab.h; else rm -f yy.tab.ht; fi'
    else
	@echo "System has no bison, yacc or byacc - install one of them"
    endif

%.1.gz:	%
    ifeq ($(TKGE803),true)
	@pod2man -u -n $* -c 'iC Project Documentation' -r "icc.v $(REV)" $< > $*.1
    else
	@pod2man -n $* -c 'iC Project Documentation' -r "icc.v $(REV)" $< > $*.1
    endif
	@gzip -f $*.1

$(srcdir)/scid.c:	$(srcdir)/icc.v $(srcdir)/Makefile.in $(srcdir)/misc.c $(CSRC) $(srcdir)/pawk.pl $(srcdir)/init_t.ic $(srcdir)/init_t.pl $(srcdir)/pplstfix $(LSRC) $(PSRC)
	@rm -f $(srcdir)/scid.c; perl $(srcdir)/pawk.pl -O '$(OPT)' $(srcdir)/icc.v $(srcdir)/Makefile.in $(srcdir)/init_t.ic $(srcdir)/init_t.pl $(srcdir)/pplstfix > $(srcdir)/scid.c; chmod -w $(srcdir)/scid.c

$(srcdir)/cexe.c:	$(srcdir)/cexe_t.c
	cp -f $(srcdir)/cexe_t.c $(srcdir)/cexe.c
	chmod +w $(srcdir)/cexe.c

$(srcdir)/immcc.1.gz:	$(srcdir)/icc.c $(srcdir)/scid.c
    ifeq ($(TKGE803),true)
	@pod2man -u -n immcc -c 'iC Project Documentation' -r "icc.v $(REV)" $< > $(srcdir)/immcc.1
    else
	@pod2man -n immcc -c 'iC Project Documentation' -r "icc.v $(REV)" $< > $(srcdir)/immcc.1
    endif
	@gzip -f $(srcdir)/immcc.1

$(srcdir)/goserver.1.gz:	$(srcdir)/goserver.go $(srcdir)/scid.c
    ifeq ($(TKGE803),true)
	@pod2man -u -n iCserver -c 'iC Project Documentation' -r "icc.v $(REV)" $< > $(srcdir)/goserver.1
    else
	@pod2man -n iCserver -c 'iC Project Documentation' -r "icc.v $(REV)" $< > $(srcdir)/goserver.1
    endif
	@gzip -f $(srcdir)/goserver.1

$(srcdir)/immag.1.gz:	$(srcdir)/immag.go $(srcdir)/scid.c
    ifeq ($(TKGE803),true)
	@pod2man -u -n iCserver -c 'iC Project Documentation' -r "icc.v $(REV)" $< > $(srcdir)/immag.1
    else
	@pod2man -n iCserver -c 'iC Project Documentation' -r "icc.v $(REV)" $< > $(srcdir)/immag.1
    endif
	@gzip -f $(srcdir)/immag.1

$(srcdir)/iCbox.1.gz:	$(srcdir)/iCbox $(srcdir)/scid.c

$(srcdir)/iClift.1.gz:	$(srcdir)/iClift $(srcdir)/scid.c

$(srcdir)/iClive.1.gz:	$(srcdir)/iClive $(srcdir)/scid.c

$(srcdir)/iCmake.1.gz:	$(srcdir)/iCmake $(srcdir)/scid.c

$(srcdir)/iCman.1.gz:	$(srcdir)/iCman $(srcdir)/scid.c

$(srcdir)/iCserver.1.gz:	$(srcdir)/iCserver $(srcdir)/scid.c

$(srcdir)/iCtherm.1.gz:	$(srcdir)/iCtherm $(srcdir)/scid.c

$(srcdir)/immac.1.gz:	$(srcdir)/immac $(srcdir)/scid.c

$(srcdir)/immax.1.gz:	$(srcdir)/immax $(srcdir)/scid.c

$(srcdir)/makeAll.1.gz:	$(srcdir)/makeAll $(srcdir)/scid.c

$(srcdir)/Mdiff.1.gz:	$(srcdir)/AuxTools/Mdiff $(srcdir)/scid.c
    ifeq ($(TKGE803),true)
	@pod2man -u -n Mdiff -c 'iC Project Documentation' -r "icc.v $(REV)" $< > $(srcdir)/Mdiff.1
    else
	@pod2man -n Mdiff -c 'iC Project Documentation' -r "icc.v $(REV)" $< > $(srcdir)/Mdiff.1
    endif
	@gzip -f $(srcdir)/Mdiff.1

$(srcdir)/iCpiFace.1.gz:	$(srcdir)/iCpiFace.c $(srcdir)/scid.c
    ifeq ($(TKGE803),true)
	@pod2man -u -n iCpiFace -c 'iC Project Documentation' -r "icc.v $(REV)" $< > $(srcdir)/iCpiFace.1
    else
	@pod2man -n iCpiFace -c 'iC Project Documentation' -r "icc.v $(REV)" $< > $(srcdir)/iCpiFace.1
    endif
	@gzip -f $(srcdir)/iCpiFace.1

$(srcdir)/iCpiPWM.1.gz:	$(srcdir)/iCpiPWM.c $(srcdir)/scid.c
    ifeq ($(TKGE803),true)
	@pod2man -u -n iCpiPWM -c 'iC Project Documentation' -r "icc.v $(REV)" $< > $(srcdir)/iCpiPWM.1
    else
	@pod2man -n iCpiPWM -c 'iC Project Documentation' -r "icc.v $(REV)" $< > $(srcdir)/iCpiPWM.1
    endif
	@gzip -f $(srcdir)/iCpiPWM.1

$(srcdir)/iCrfid.1.gz:	$(srcdir)/iCrfid $(srcdir)/scid.c

test:
	@cd ${srcdir}/Test0/; rm -f `cat pg.lt`; cd - > /dev/null;
	@echo "compile and generate all executables from iC and iCa files in ${srcdir}/Test0 ..."
	@-${srcdir}/iCmake -qANIEfw. ${srcdir}/Test0/*.ic*; :
	@echo "diffing generated files in ${srcdir}/Test0 with originals in ${srcdir}/Test0/ORG ..."
	@if ${srcdir}/AuxTools/Mdiff -kLel -I'(eval' ${srcdir}/Test0/ORG/*.* ${srcdir}/Test0; then echo "test OK"; if ! ${srcdir}/iCserver -h 2> /dev/null; then echo "- suggest you install Time::HiRes as described in the README followed by"; fi; echo "- make install as su"; else echo "test FAILED - differences in listed files and ${srcdir}/Test0/ORG"; fi

strict:
	@cd ${srcdir}/Test0/; rm -f `cat pg.lt`; cd - > /dev/null;
	@echo "compile with -S option and generate all executables from iC and iCa files in ${srcdir}/Test0 ..."
	@-${srcdir}/iCmake -qSAIEfw. ${srcdir}/Test0/*.ic*; :
	@echo "diffing generated files in ${srcdir}/Test0 with originals in ${srcdir}/Test0/STRICT ..."
	@if ${srcdir}/AuxTools/Mdiff -kLel -I'(eval' ${srcdir}/Test0/STRICT/*.* ${srcdir}/Test0; then echo "test OK"; if ! ${srcdir}/iCserver -h 2> /dev/null; then echo "- suggest you install Time::HiRes as described in the README followed by"; fi; echo "- make install as su"; else echo "test FAILED - differences in listed files and ${srcdir}/Test0/STRICT"; fi

install:	$(srcdir)/immcc.1.gz $(srcdir)/immac.1.gz $(srcdir)/immax.1.gz $(srcdir)/iCbox.1.gz $(srcdir)/iClift.1.gz $(srcdir)/iClive.1.gz $(srcdir)/iCmake.1.gz $(srcdir)/iCman.1.gz $(srcdir)/goserver.1.gz $(srcdir)/immag.1.gz $(srcdir)/iCserver.1.gz $(srcdir)/iCpiFace.1.gz $(srcdir)/iCpiPWM.1.gz $(srcdir)/iCrfid.1.gz $(srcdir)/iCtherm.1.gz $(srcdir)/makeAll.1.gz $(srcdir)/Mdiff.1.gz
	@$(srcdir)/perlinstall -t $(srcdir)
	@${INSTALL} -d ${bindir} ${libdir} ${includedir} ${mandir}/man1
	@${INSTALL_PROGRAM} $(srcdir)/iCmsg.pm  `$(srcdir)/perlinstall`/iCmsg.pm
	@${INSTALL_PROGRAM} $(srcdir)/immcc      ${bindir}/${binprefix}immcc
	@${INSTALL_PROGRAM} $(srcdir)/pplstfix   ${bindir}/${binprefix}pplstfix
	@${INSTALL_PROGRAM} $(srcdir)/immax      ${bindir}/${binprefix}immax
	@${INSTALL_PROGRAM} $(srcdir)/iCbox      ${bindir}/${binprefix}iCbox
	@${INSTALL_PROGRAM} $(srcdir)/iClift     ${bindir}/${binprefix}iClift
	@${INSTALL_PROGRAM} $(srcdir)/iClive     ${bindir}/${binprefix}iClive
	@${INSTALL_PROGRAM} $(srcdir)/iCmake     ${bindir}/${binprefix}iCmake
	@${INSTALL_PROGRAM} $(srcdir)/iCman      ${bindir}/${binprefix}iCman
ifeq ($(GO),go)
	@${INSTALL_PROGRAM} $(srcdir)/goserver   ${bindir}/${binprefix}iCserver
	@${INSTALL_PROGRAM} $(srcdir)/immag      ${bindir}/${binprefix}immac
else
	@${INSTALL_PROGRAM} $(srcdir)/iCserver   ${bindir}/${binprefix}iCserver
	@${INSTALL_PROGRAM} $(srcdir)/immac      ${bindir}/${binprefix}immac
endif
ifeq ($(findstring RASPBERRYPI,$(OPT)),RASPBERRYPI)
	@${INSTALL_PROGRAM} $(srcdir)/iCpiFace          ${bindir}/${binprefix}iCpiFace
	@sudo ln -sf ${bindir}/${binprefix}iCpiFace     ${bindir}/${binprefix}iCpiGPIO
	@${INSTALL_PROGRAM} -m 4755 $(srcdir)/iCgpioPUD ${bindir}/${binprefix}iCgpioPUD
	@${INSTALL_PROGRAM} $(srcdir)/iCtherm           ${bindir}/${binprefix}iCtherm
	@${INSTALL_DATA} $(srcdir)/../include/pigpio.h     ${includedir}/${includeprefix}pigpio.h
	@${INSTALL_DATA} $(srcdir)/../include/pigpiod_if.h ${includedir}/${includeprefix}pigpiod_if.h
	@${INSTALL_DATA} $(srcdir)/../lib/libpigpio.a      ${libdir}/${libprefix}libpigpio.a
	@${INSTALL_DATA} $(srcdir)/../lib/libpigpiod_if.a  ${libdir}/${libprefix}libpigpiod_if.a
	@${INSTALL_PROGRAM} -m 4755 $(srcdir)/iCpiPWM   ${bindir}/${binprefix}iCpiPWM
endif
	@${INSTALL_PROGRAM} $(srcdir)/iCrfid     ${bindir}/${binprefix}iCrfid
	@${INSTALL_PROGRAM} $(srcdir)/AuxTools/Mdiff      ${bindir}/${binprefix}Mdiff
	@${INSTALL_DATA} $(srcdir)/libict.a      ${libdir}/${libprefix}libict.a
	@if [ -f $(srcdir)/libict.so ]; then ${INSTALL_PROGRAM} $(srcdir)/libict.so ${libdir}/${libprefix}libict.so.1.$(REV); sudo /sbin/ldconfig ${libdir}; cd ${libdir}/; sudo ln -sf ${libprefix}libict.so.1.$(REV) ${libprefix}libict.so; cd -; fi
ifneq ($(findstring RASPBERRYPI,$(OPT)),RASPBERRYPI)
	@if [ ! -d ${libdir64} ]; then mkdir -p ${libdir64}; fi
	@if [ -f $(srcdir)/libict.so ]; then ${INSTALL_PROGRAM} $(srcdir)/libict.so ${libdir64}/${libprefix}libict.so.1.$(REV); sudo /sbin/ldconfig ${libdir64}; cd ${libdir64}/; sudo ln -sf ${libprefix}libict.so.1.$(REV) ${libprefix}libict.so; cd -; fi
	@${INSTALL_DATA} $(srcdir)/libict.a      ${libdir64}/${libprefix}libict.a
endif
	@${INSTALL_DATA} $(srcdir)/icg.h         ${includedir}/${includeprefix}icg.h
	@${INSTALL_DATA} $(srcdir)/immcc.1.gz    ${mandir}/man1/${manprefix}immcc.1.gz
	@${INSTALL_DATA} $(srcdir)/immax.1.gz    ${mandir}/man1/${manprefix}immax.1.gz
	@${INSTALL_DATA} $(srcdir)/iCbox.1.gz    ${mandir}/man1/${manprefix}iCbox.1.gz
	@${INSTALL_DATA} $(srcdir)/iClift.1.gz   ${mandir}/man1/${manprefix}iClift.1.gz
	@${INSTALL_DATA} $(srcdir)/iClive.1.gz   ${mandir}/man1/${manprefix}iClive.1.gz
	@${INSTALL_DATA} $(srcdir)/iCmake.1.gz   ${mandir}/man1/${manprefix}iCmake.1.gz
	@${INSTALL_DATA} $(srcdir)/iCman.1.gz    ${mandir}/man1/${manprefix}iCman.1.gz
ifeq ($(GO),go)
	@${INSTALL_DATA} $(srcdir)/goserver.1.gz ${mandir}/man1/${manprefix}iCserver.1.gz
	@${INSTALL_DATA} $(srcdir)/immag.1.gz    ${mandir}/man1/${manprefix}immac.1.gz
else
	@${INSTALL_DATA} $(srcdir)/iCserver.1.gz ${mandir}/man1/${manprefix}iCserver.1.gz
	@${INSTALL_DATA} $(srcdir)/immac.1.gz    ${mandir}/man1/${manprefix}immac.1.gz
endif
	@${INSTALL_DATA} $(srcdir)/iCpiFace.1.gz ${mandir}/man1/${manprefix}iCpiFace.1.gz
	@${INSTALL_DATA} $(srcdir)/iCpiPWM.1.gz  ${mandir}/man1/${manprefix}iCpiPWM.1.gz
	@${INSTALL_DATA} $(srcdir)/iCtherm.1.gz  ${mandir}/man1/${manprefix}iCtherm.1.gz
	@${INSTALL_DATA} $(srcdir)/iCrfid.1.gz   ${mandir}/man1/${manprefix}iCrfid.1.gz
	@${INSTALL_DATA} $(srcdir)/makeAll.1.gz  ${mandir}/man1/${manprefix}makeAll.1.gz
	@${INSTALL_DATA} $(srcdir)/Mdiff.1.gz    ${mandir}/man1/${manprefix}Mdiff.1.gz
	@${INSTALL_DATA} $(srcdir)/../man/man1/pig2vcd.1.gz    ${mandir}/man1/${manprefix}pig2vcd.1.gz
	@${INSTALL_DATA} $(srcdir)/../man/man1/pigpiod.1.gz    ${mandir}/man1/${manprefix}pigpiod.1.gz
	@${INSTALL_DATA} $(srcdir)/../man/man1/pigs.1.gz       ${mandir}/man1/${manprefix}pigs.1.gz
	@${INSTALL_DATA} $(srcdir)/../man/man3/pigpio.3.gz     ${mandir}/man3/${manprefix}pigpio.3.gz
	@${INSTALL_DATA} $(srcdir)/../man/man3/pigpiod_if.3.gz ${mandir}/man3/${manprefix}pigpiod_if.3.gz

uninstall:
	$(srcdir)/perlinstall -r $(srcdir)
	sudo rm -f `$(srcdir)/perlinstall`/iCmsg.pm
	sudo rm -f ${bindir}/${binprefix}immcc
	sudo rm -f ${bindir}/${binprefix}pplstfix
	sudo rm -f ${bindir}/${binprefix}immac
	sudo rm -f ${bindir}/${binprefix}immax
	sudo rm -f ${bindir}/${binprefix}iCbox
	sudo rm -f ${bindir}/${binprefix}iClift
	sudo rm -f ${bindir}/${binprefix}iClive
	sudo rm -f ${bindir}/${binprefix}iCmake
	sudo rm -f ${bindir}/${binprefix}iCman
	sudo rm -f ${bindir}/${binprefix}iCserver
	sudo rm -f ${bindir}/${binprefix}iCpiFace
	sudo rm -f ${bindir}/${binprefix}iCpiPWM
	sudo rm -f ${bindir}/${binprefix}iCpiGPIO
	sudo rm -f ${bindir}/${binprefix}iCgpioPUD
	sudo rm -f ${bindir}/${binprefix}iCtherm
	sudo rm -f ${includedir}/${includeprefix}pigpio.h
	sudo rm -f ${includedir}/${includeprefix}pigpiod_if.h
	sudo rm -f ${libdir}/${libprefix}libpigpio.a
	sudo rm -f ${libdir}/${libprefix}libpigpiod_if.a
	sudo rm -f ${bindir}/${binprefix}iCrfid
	sudo rm -f ${libdir}/${libprefix}libict.a
	sudo rm -f ${libdir}/${libprefix}libict.so
	sudo rm -f ${libdir}/${libprefix}libict.so.1
	sudo rm -f ${libdir}/${libprefix}libict.so.1.$(REV)
	sudo rm -f ${bindir}/${binprefix}Mdiff
	sudo rm -f ${includedir}/${includeprefix}icg.h
	sudo rm -f ${mandir}/man1/${manprefix}immcc.1.gz
	sudo rm -f ${mandir}/man1/${manprefix}immac.1.gz
	sudo rm -f ${mandir}/man1/${manprefix}immax.1.gz
	sudo rm -f ${mandir}/man1/${manprefix}iCbox.1.gz
	sudo rm -f ${mandir}/man1/${manprefix}iClift.1.gz
	sudo rm -f ${mandir}/man1/${manprefix}iClive.1.gz
	sudo rm -f ${mandir}/man1/${manprefix}iCmake.1.gz
	sudo rm -f ${mandir}/man1/${manprefix}iCman.1.gz
	sudo rm -f ${mandir}/man1/${manprefix}iCserver.1.gz
	sudo rm -f ${mandir}/man1/${manprefix}iCpiFace.1.gz
	sudo rm -f ${mandir}/man1/${manprefix}iCpiPWM.1.gz
	sudo rm -f ${mandir}/man1/${manprefix}iCtherm.1.gz
	sudo rm -f ${mandir}/man1/${manprefix}iCrfid.1.gz
	sudo rm -f ${mandir}/man1/${manprefix}makeAll.1.gz
	sudo rm -f ${mandir}/man1/${manprefix}Mdiff.1.gz
	sudo rm -f ${mandir}/man1/${manprefix}pig2vcd.1.gz
	sudo rm -f ${mandir}/man1/${manprefix}pigpiod.1.gz
	sudo rm -f ${mandir}/man1/${manprefix}pigs.1.gz
	sudo rm -f ${mandir}/man3/${manprefix}pigpio.3.gz
	sudo rm -f ${mandir}/man3/${manprefix}pigpiod_if.3.gz

clean:
	rm -rf *.$(O) $(srcdir)/LibObjs $(srcdir)/SharedObjs $(srcdir)/IcrObjs $(srcdir)/IctObjs $(srcdir)/ConstObjs $(srcdir)/LmainObjs $(srcdir)/PiFaceObjs $(srcdir)/PiPWMObjs $(srcdir)/cexe.c $(srcdir)/scid.c $(srcdir)/icg.h $(srcdir)/core $(srcdir)/immcc $(srcdir)/libict* $(srcdir)/icbegin.a $(srcdir)/icr $(srcdir)/ict $(srcdir)/const $(srcdir)/lmain $(srcdir)/iCpiFace $(srcdir)/iCgpioPUD $(srcdir)/iCpiPWM $(srcdir)/goserver $(srcdir)/../pkg/*/tcpcomm.a $(srcdir)/immag $(srcdir)/*.1.gz

distclean: clean
	rm -f $(srcdir)/Makefile $(srcdir)/comp.tab.c $(srcdir)/comp.tab.h $(srcdir)/comp.output $(srcdir)/gram.tab.c $(srcdir)/gram.tab.h $(srcdir)/gram.output $(srcdir)/lex.yy.c $(srcdir)/cons.tab.c $(srcdir)/cons.tab.h $(srcdir)/cons.output $(srcdir)/config.status $(srcdir)/config.log $(srcdir)/config.cache $(srcdir)/pplstfix.log
	cd ${srcdir}/Test0/; rm -f `cat pg.lt`; cd - > /dev/null;

distribution:
	@echo "making icc_$(REV).tgz"; cd ${srcdir}/../..; test -h icc_$(REV) || ln -s immediatec icc_$(REV); cd immediatec; tar -czf icc_$(REV).tgz $$($(PADD) manifest); cd $(srcdir);

genr.$(O):	$(srcdir)/icc.h $(srcdir)/comp.h $(srcdir)/comp.tab.h

init.$(O):	$(srcdir)/icc.h $(srcdir)/comp.h $(srcdir)/comp.tab.h

symb.$(O):	$(srcdir)/icc.h $(srcdir)/comp.h

comp.$(O):	$(srcdir)/comp.tab.c $(srcdir)/icc.h $(srcdir)/comp.h
	$(CC) -I. $(CFLAGS_COMPILE_ONLY) -DYYERROR_VERBOSE $(CPPFLAGS) $(CFLAGS) -o $@ $(srcdir)/comp.tab.c

icc.$(O):	$(srcdir)/icc.h $(srcdir)/comp.h $(srcdir)/cexe.h $(srcdir)/scid.c

outp.$(O):	$(srcdir)/icc.h $(srcdir)/comp.h gram.tab.c

cexe.$(O):	$(srcdir)/cexe.c $(srcdir)/icc.h $(srcdir)/comp.h

rsff.$(O):	$(srcdir)/icc.h $(srcdir)/tcpc.h

tcpc.$(O):	$(srcdir)/icc.h $(srcdir)/tcpc.h

icr.$(O):	$(srcdir)/icc.h

link.$(O):	$(srcdir)/icc.h

scan.$(O):	$(srcdir)/icc.h

gram.$(O):	$(srcdir)/gram.tab.c $(srcdir)/icc.h $(srcdir)/comp.h
	$(CC) -I. $(CFLAGS_COMPILE_ONLY) -DYYERROR_VERBOSE $(CPPFLAGS) $(CFLAGS) -o $@ $(srcdir)/gram.tab.c

lexc.$(O):	$(srcdir)/lex.yy.c $(srcdir)/icc.h $(srcdir)/comp.h $(srcdir)/gram.tab.h
	$(CC) -I. $(CFLAGS_COMPILE_ONLY) $(CPPFLAGS) $(CFLAGS) -o $@ $(srcdir)/lex.yy.c

cons.$(O):	$(srcdir)/cons.tab.c
	$(CC) -I. $(CFLAGS_COMPILE_ONLY) -DYYERROR_VERBOSE $(CPPFLAGS) $(CFLAGS) -o $@ $(srcdir)/cons.tab.c

const.$(O):	$(srcdir)/comp.h

lmain.$(O):	$(srcdir)/icc.h $(srcdir)/comp.h

scid.$(O):	$(srcdir)/scid.c
ifeq ($(findstring RASPBERRYPI,$(OPT)),RASPBERRYPI)

iCpiFace.$(O):	$(srcdir)/icc.h $(srcdir)/tcpc.h $(srcdir)/rpi_rev.h $(srcdir)/rpi_gpio.h $(srcdir)/mcp23s17.h $(srcdir)/pifacecad.h $(srcdir)/bcm2835.h

iCgpioPUD.$(O):	$(srcdir)/bcm2835.h

${includedir}/${includeprefix}pigpio.h:	$(srcdir)/../include/pigpio.h
	@${INSTALL_DATA} $(srcdir)/../include/pigpio.h     ${includedir}/${includeprefix}pigpio.h

iCpiPWM.$(O):	$(srcdir)/icc.h $(srcdir)/tcpc.h $(srcdir)/rpi_rev.h ${includedir}/${includeprefix}pigpio.h

rpi_rev.$(O):	$(srcdir)/rpi_rev.h

rpi_gpio.$(O):	$(srcdir)/rpi_gpio.h

mcp23s17.$(O):	$(srcdir)/mcp23s17.h $(srcdir)/pifacecad.h

pifacecad.$(O):	$(srcdir)/pifacecad.h $(srcdir)/mcp23s17.h

bcm2835.$(O):	$(srcdir)/bcm2835.h

load.$(O):	$(srcdir)/icc.h $(srcdir)/rpi_rev.h $(srcdir)/tcpc.h $(srcdir)/rpi_gpio.h $(srcdir)/mcp23s17.h $(srcdir)/bcm2835.h

ict.$(O):	$(srcdir)/icc.h $(srcdir)/tcpc.h $(srcdir)/rpi_gpio.h $(srcdir)/mcp23s17.h $(srcdir)/pifacecad.h

misc.$(O):	$(srcdir)/icc.h $(srcdir)/rpi_gpio.h $(srcdir)/mcp23s17.h $(srcdir)/bcm2835.h
else

load.$(O):	$(srcdir)/icc.h $(srcdir)/tcpc.h

ict.$(O):	$(srcdir)/icc.h $(srcdir)/tcpc.h

misc.$(O):	$(srcdir)/icc.h
endif
